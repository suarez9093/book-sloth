{"version":3,"sources":["components/Cards/Card/index.js","components/context/index.js","components/Cards/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["Card","users","message","first_name","last_name","photo","likes","replies","useState","isHidden","setIsHidden","like","setLike","toggleModal","e","overlay","document","querySelector","target","className","style","display","src","alt","onClick","heartBtn","console","dir","color","fontSize","prevState","replyContainer","parentNode","nextSibling","maxHeight","scrollHeight","href","rel","context","React","createContext","ContextProvider","children","usersData","setUsers","Provider","value","Cards","useContext","map","user","key","id","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7c7f3a03.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./card.css\";\n\nfunction Card({ users }) {\n  const { message, first_name, last_name, photo, likes, replies } = users;\n\n  const [isHidden, setIsHidden] = useState(true);\n  const [like, setLike] = useState(likes);\n\n  function toggleReplies(e) {\n    const button = e.target;\n    const cardResContainer = button.parentNode;\n    const card = cardResContainer.parentNode;\n    const replyContainer = card.nextSibling;\n    if (!replyContainer) {\n      return;\n    } else if (replyContainer.style.maxHeight) {\n      replyContainer.style.maxHeight = null;\n    } else {\n      replyContainer.style.maxHeight = replyContainer.scrollHeight + \"px\";\n    }\n    setIsHidden((prevState) => !prevState);\n  }\n\n  function toggleLike(e) {\n    const heartBtn = e.target;\n    console.dir(heartBtn);\n    if (heartBtn.style.color === \"\") {\n      heartBtn.style.color = \"red\";\n      heartBtn.style.fontSize = \"1.25em\";\n      setLike((prevState) => prevState + 1);\n    } else {\n      heartBtn.style.color = \"\";\n      heartBtn.style.fontSize = \"1em\";\n      setLike((prevState) => prevState - 1);\n    }\n  }\n\n  function toggleModal(e) {\n    let overlay = document.querySelector(\".overlay\");\n    if (e.target.className === \"fas fa-share-alt\") {\n      overlay.style.display = \"block\";\n    } else if (e.target.className === \"modal-btn\") {\n      overlay.style.display = \"none\";\n    }\n  }\n\n  return (\n    <>\n      {/* Message Container\n    ===========================================================\n    */}\n      {message && (\n        <div className=\"card-container\">\n          <div className=\"card\">\n            <img className=\"card-img\" src={photo} alt=\"user profile\" />\n            <div className=\"card-main\">\n              <p className=\"card-user\">\n                {first_name} {last_name}\n              </p>\n              <p className=\"card-message\">{message}</p>\n              <div className=\"interact-icons\">\n                <div className=\"interact-icon\">\n                  <span>\n                    <i className=\"fas fa-share reply-icon\"></i> 12\n                  </span>\n                </div>\n                <div className=\"interact-icon\">\n                  <span>\n                    <i onClick={toggleLike} className=\"fas fa-heart\"></i> {like}\n                  </span>\n                </div>\n                <div className=\"interact-icon\">\n                  <i onClick={toggleModal} className=\"fas fa-share-alt\"></i>\n                </div>\n              </div>\n            </div>\n            <div className=\"card-response-container\">\n              <button onClick={toggleReplies} className=\"card-btn\">\n                12 min\n                {isHidden && (\n                  <i className=\"fas fa-greater-than card-btn-icon\"></i>\n                )}\n                {!isHidden && (\n                  <i className=\"fas fa-greater-than card-btn-rotate\"></i>\n                )}\n              </button>\n              <div className=\"card-tag\">Ask</div>\n            </div>\n          </div>\n\n          {/* Reply Container\n    ===========================================================\n    */}\n          {replies && (\n            <div className=\"reply-container\">\n              <div className=\"card\">\n                <img className=\"card-img\" src={replies[0].photo} alt=\"user\" />\n                <div className=\"card-main\">\n                  <p className=\"card-user\">\n                    {replies[0].first_name} {replies[0].last_name}{\" \"}\n                  </p>\n                  <p className=\"card-message\">{replies[0].message} </p>\n                </div>\n                <div className=\"card-response-container\">\n                  <span className=\"card-btn-text\">4 hr</span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n\n      {/* Modal\n    ===========================================================\n    */}\n\n      <div className=\"overlay\">\n        <div className=\"modal\">\n          <h2 className=\"modal-title\">Share this post</h2>\n          <ul className=\"modal-share-links\">\n            <li className=\"modal-share-item\">\n              <a\n                className=\"modal-link\"\n                href=\"https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fparse.com\"\n                target=\"_blank\"\n                rel=\"noopener\"\n              >\n                <img\n                  className=\"modal-img\"\n                  src=\"https://cdn.worldvectorlogo.com/logos/facebook-2.svg\"\n                  alt=\"facebook\"\n                />\n              </a>\n            </li>\n            <li className=\"modal-share-item\">\n              <a className=\"modal-link\" href=\"http://www.twitter.com/tweet\">\n                <img\n                  className=\"modal-img\"\n                  src=\"https://upload.wikimedia.org/wikipedia/sco/thumb/9/9f/Twitter_bird_logo_2012.svg/1200px-Twitter_bird_logo_2012.svg.png\"\n                  alt=\"twitter\"\n                />\n              </a>\n            </li>\n            <li className=\"modal-share-item\">\n              <a\n                className=\"modal-link\"\n                href=\"http://www.reddit.com/submit?url=https://stackoverflow.com/questions/24823114/post-to-reddit-via-url&title=Post%20to%20Reddit%20via%20URL\"\n              >\n                <img\n                  className=\"modal-img\"\n                  src=\"https://www.logo.wine/a/logo/Reddit/Reddit-Logomark-Color-Logo.wine.svg\"\n                  alt=\"reddit\"\n                />\n              </a>\n            </li>\n            <li className=\"modal-share-item\"></li>\n          </ul>\n\n          <button onClick={toggleModal} className=\"modal-btn\">\n            Close\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport usersData from \"../../users.json\";\nconst context = React.createContext();\n\nfunction ContextProvider({ children }) {\n  const [users, setUsers] = useState(usersData);\n\n  return (\n    <context.Provider\n      value={{\n        users,\n        setUsers,\n      }}\n    >\n      {children}\n    </context.Provider>\n  );\n}\n\nexport { ContextProvider, context };\n","// import React from \"react\";\nimport React, { useContext } from \"react\";\nimport Card from \"./Card\";\nimport { context } from \"../context\";\n\nfunction Cards() {\n  const { users } = useContext(context);\n  return (\n    <div>\n      {users.map((user) => (\n        <Card key={user.id} users={user} />\n      ))}\n    </div>\n  );\n}\n\nexport default Cards;\n","import React from \"react\";\nimport \"./header.css\";\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <nav className=\"navigation\">\n        <img\n          className=\"logo-img\"\n          src=\"https://www.booksloth.com/a/i/logo.png\"\n          alt=\"book sloth logo\"\n        />\n\n        <ul className=\"social-links\">\n          <li className=\"social-item\">\n            <a\n              className=\"social-link\"\n              href=\"https://www.facebook.com/booksloth/\"\n            >\n              <i className=\"fab fa-facebook-f\"></i>\n            </a>\n          </li>\n          <li className=\"social-item\">\n            <a\n              className=\"social-link\"\n              href=\"https://www.instagram.com/bookslothapp/?hl=en\"\n            >\n              <i className=\"fab fa-instagram\"></i>\n            </a>\n          </li>\n          <li className=\"social-item\">\n            <a\n              className=\"social-link\"\n              href=\"https://twitter.com/bookslothapp?lang=en\"\n            >\n              <i className=\"fab fa-twitter\"></i>\n            </a>\n          </li>\n        </ul>\n      </nav>\n      <h1 className=\"header-title\">Community</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport Cards from \"./components/Cards\";\nimport Header from \"./components/Header\";\nimport \"./style.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Cards />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ContextProvider } from \"./components/context/index\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}